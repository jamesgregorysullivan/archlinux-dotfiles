# lighttpd configuration file
# 
## modules to load
# all other module should only be loaded if really neccesary
# - saves some time
# - saves memory
server.modules = ( 
#	"mod_rewrite", 
	"mod_redirect", 
	"mod_accesslog",
#	"mod_access",
#	"mod_alias", 
	"mod_auth", 
#	"mod_status", 
#	"mod_setenv",
#	"mod_fastcgi",
#	"mod_proxy",
#	"mod_simple_vhost",
	"mod_cgi",
	"mod_ssi",
#	"mod_usertrack",
#	"mod_expire",
	"mod_webdav"
)

# force use of the "write" backend (closes: #2401)
server.network-backend = "write"

## where to send error-messages to
server.errorlog = "/var/log/lighttpd/lighttpd-error.log"

accesslog.filename = "/var/log/lighttpd/lighttpd-accesslog.log"

## files to check for if .../ is requested
index-file.names = ( "index.html", "index.htm", "index.php" )

## mimetype mapping
mimetype.assign     = (
    ".pdf"          =>      "application/pdf",
    ".sig"          =>      "application/pgp-signature",
    ".spl"          =>      "application/futuresplash",
    ".class"        =>      "application/octet-stream",
    ".ps"           =>      "application/postscript",
    ".torrent"      =>      "application/x-bittorrent",
    ".dvi"          =>      "application/x-dvi",
    ".gz"           =>      "application/x-gzip",
    ".pac"          =>      "application/x-ns-proxy-autoconfig",
    ".swf"          =>      "application/x-shockwave-flash",
    ".tar.gz"       =>      "application/x-tgz",
    ".tgz"          =>      "application/x-tgz",
    ".tar"          =>      "application/x-tar",
    ".zip"          =>      "application/zip",
    ".mp3"          =>      "audio/mpeg",
    ".m3u"          =>      "audio/x-mpegurl",
    ".wma"          =>      "audio/x-ms-wma",
    ".wax"          =>      "audio/x-ms-wax",
    ".ogg"          =>      "application/ogg",
    ".wav"          =>      "audio/x-wav",
    ".gif"          =>      "image/gif",
    ".jpg"          =>      "image/jpeg",
    ".jpeg"         =>      "image/jpeg",
    ".png"          =>      "image/png",
    ".xbm"          =>      "image/x-xbitmap",
    ".xpm"          =>      "image/x-xpixmap",
    ".xwd"          =>      "image/x-xwindowdump",
    ".css"          =>      "text/css",
    ".html"         =>      "text/html",
    ".htm"          =>      "text/html",
    ".js"           =>      "text/javascript",
    ".asc"          =>      "text/plain",
    ".c"            =>      "text/plain",
    ".cpp"          =>      "text/plain",
    ".log"          =>      "text/plain",
    ".conf"         =>      "text/plain",
    ".text"         =>      "text/plain",
    ".txt"          =>      "text/plain",
    ".dtd"          =>      "text/xml",
    ".xml"          =>      "text/xml",
    ".srt"          =>      "text/subtitles",
    ".sub"          =>      "text/subtitles",
    ".mpeg"         =>      "video/mpeg",
    ".mpg"          =>      "video/mpeg",
    ".avi"          =>      "video/avi",
    ".mp4"          =>      "video/mp4",
    ".mkv"          =>      "video/matroska",
    ".wmv"          =>      "video/ms-wmv",
    ".bz2"          =>      "application/x-bzip",
    ".tbz"          =>      "application/x-bzip-compressed-tar",
    ".tar.bz2"      =>      "application/x-bzip-compressed-tar"
)

## Use the "Content-Type" extended attribute to obtain mime type if possible
#mimetypes.use-xattr = "enable"

## send a different Server: header
## be nice and keep it at lighttpd
server.tag = "lighttpd"

##
# which extensions should not be handle via static-file transfer
#
# .php, .pl, .fcgi are most often handled by mod_fastcgi or mod_cgi
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi", ".py" )

## cgi module
cgi.assign = ( ".php" => "/usr/bin/php-cgi",
               ".py" => "/usr/bin/python2",
               ".pyc" => "/usr/bin/python2")


######### Options that are good to be but not neccesary to be changed #######

## bind to port (default: 80)
#server.port = 81

## bind to localhost (default: all interfaces)
#server.bind = "localhost"

## error-handler for status 404
#server.error-handler-404 = "/error-handler.html"
#server.error-handler-404 = "/error-handler.php"

## to help the rc.scripts
server.pid-file = "/var/run/lighttpd/lighttpd.pid"


###### virtual hosts
##
##   If you want name-based virtual hosting add the next three settings and load
##   mod_simple_vhost
##
## document-root =
##   virtual-server-root + virtual-server-default-host + virtual-server-docroot or
##   virtual-server-root + http-host + virtual-server-docroot
##
#simple-vhost.server-root = "/home/weigon/wwwroot/servers/"
#simple-vhost.default-host = "grisu.home.kneschke.de"
#simple-vhost.document-root = "/pages/"


## 
## Format: <errorfile-prefix><status>.html
## -> ..../status-404.html for 'File not found'
#server.errorfile-prefix = "/www/error-"

## send unhandled HTTP-header headers to error-log
#debug.dump-unknown-headers = "enable"

### only root can use these options
#
# chroot() to directory (default: no chroot() )
#server.chroot = "/"

## change uid to <uid> (default: don't care)
server.username = "lahwaacz"

## change uid to <uid> (default: don't care)
server.groupname = "lahwaacz"

server.upload-dirs = ( "/tmp" )

ssi.extension = (".html")


# root server
server.document-root = "/srv/http/vhost-root"

#fastcgi.server = (
#    ".php" => (
#        "localhost" => ( 
#            "bin-path" => "/usr/bin/php-cgi",
#            "socket" => "/var/run/lighttpd/php-fastcgi.sock",
#            "max-procs" => 1,
#            "bin-environment" => (
#                "PHP_FCGI_CHILDREN" => "1",
#            ),
#            "broken-scriptfilename" => "enable"
#        )
#    ),
#    ".py" => (
#        "python-fcgi" => (
#            "socket" => "/var/run/lighttpd/fastcgi.python.socket",
#            "check-local" => "disable",
#            "max-procs" => 1,
#        )
#    )
#)

$SERVER["socket"] == ":443" {
    ssl.engine = "enable" 
    ssl.pemfile = "/etc/lighttpd/certs/asusntb.lan.pem" 

    $HTTP["host"] == "data.asusntb.lan" {
        server.document-root = "/home/lahwaacz/"
        dir-listing.activate = "enable"
        dir-listing.encoding = "utf-8"
        auth.backend = "htpasswd"
        auth.backend.htpasswd.userfile = "/etc/lighttpd/.npass"
        auth.require = ( "" => ( "method" => "basic",
            "realm" => "webdav",
            "require" => "user=lahwaacz" ) ) 
        webdav.activate = "enable"
        webdav.is-readonly = "enable"
        webdav.sqlite-db-name = "/etc/lighttpd/webdav.db"
    }

    $HTTP["host"] == "mpd.asusntb.lan" {
        server.document-root = "/srv/http/vhost-mpd"
    }

    $HTTP["host"] == "pwdhash.asusntb.lan" {
        server.document-root = "/srv/http/vhost-pwdhash"
    }

    $HTTP["host"] == "doc.asusntb.lan" {
        server.document-root = "/srv/http/vhost-doc"
    }

    $HTTP["host"] == "sage.doc.asusntb.lan" {
        server.document-root = "/srv/http/vhost-doc/sage"
    }

    $HTTP["host"] == "python.doc.asusntb.lan" {
        server.document-root = "/srv/http/vhost-doc/python"
    }

    $HTTP["host"] == "qt.doc.asusntb.lan" {
        server.document-root = "/srv/http/vhost-doc/qt"
    }

    $HTTP["host"] == "arch.doc.asusntb.lan" {
        server.document-root = "/srv/http/vhost-doc/arch"
    }
}

$SERVER["socket"] == ":80" {
    $HTTP["host"] =~ "(.*)" {
        url.redirect = ( "^/(.*)" => "https://%1/$1" )
    }
}
